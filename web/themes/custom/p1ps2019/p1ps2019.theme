<?php

use \Drupal\paragraphs\Entity\Paragraph;
use \Drupal\Core\Form\FormStateInterface;
use \Drupal\taxonomy\Entity\Term;
use \Drupal\user\Entity\User;
use \Drupal\Core\Url;
use \Drupal\up1_pages_personnelles\ComptexManager;


/**
 * Implements hook_preprocess_HOOK() for html.twig.
 */
function p1ps2019_preprocess_html(&$variables) {
  $variables['lang'] = \Drupal::languageManager()->getCurrentLanguage()->getId();
  $negotiator = \Drupal::service('micro_site.negotiator');
  $system_path = \Drupal::service('path.current')->getPath();
  $page_mini_site = FALSE;

  $site = $negotiator->getActiveSite();
  if (isset($site) && !empty($site)) {
    if (in_array($system_path, ['/actualites', '/evenements', '/publications'])) {
      $page_mini_site = TRUE;
    }
  }
  $variables['page_mini_site'] = $page_mini_site;

  try {
    $variables['is_front'] = \Drupal::service('path.matcher')->isFrontPage();
  }
  catch (Exception $e) {
    $variables['is_front'] = FALSE;
  }
  if (preg_match('/site/',$variables['root_path']) && !isset($variables['node_type']) ) {
    $variables['is_front_mini_site'] = TRUE;
  }
  else $variables['is_front_mini_site'] = FALSE;
}

/**
 * Implements hook_preprocess_HOOK() for page.html.twig.
 */
function p1ps2019_preprocess_page(&$variables) {
  $page_mini_site = FALSE;
  $is_front_mini_site = FALSE;
  $print_hp_image = FALSE;
  $node_type = FALSE;
  $site_id = 0;
  $variables['site_name'] = "";

  if (isset($variables['node'])) {$node = $variables['node'];}
  else $node = FALSE;

  $language = \Drupal::languageManager()->getCurrentLanguage()->getId();
  $system_path = \Drupal::service('path.current')->getPath();

  $variables['#attached']['drupalSettings']['language'] = $language;

  if ($variables['is_front']) {
    $print_hp_image = TRUE;
  }

  $negotiator = \Drupal::service('micro_site.negotiator');
  $site = $negotiator->getActiveSite();

  if (isset($site) && !empty($site)) {
    if (in_array($system_path, ['/actualites', '/evenements', '/publications'])) {
    $page_mini_site = TRUE;
    }
    $site_id = $site->id();

    $complete_name = $site->get('field_complete_name')->getValue();
    if (!empty($complete_name)) {
      $variables['site_name'] = $complete_name[0]['value'];
    }
    else {
      $variables['site_name'] = $site->getName();
    }
  }

  if (isset($node) && is_object($node)) {
    $node_type = $node->getType();
    if (!in_array($node_type, ['news', 'news2018', 'event', 'publication'])
      && $node->hasField('field_media') && !empty($node->get('field_media')->getValue())) {
      $print_hp_image = TRUE;
    }
    if ($site_id != 0) {
      $page_mini_site = TRUE;
    }
  }
  if ($variables['is_front'] && !$node && $site_id != 0) {
    $is_front_mini_site = TRUE;
  }
  if (preg_match('/user/', $system_path) && $site_id != 0) {
    $page_mini_site = TRUE;
  }

  $variables['node_type'] = $node_type;
  $variables['print_hp_image'] = $print_hp_image;
  $variables['page_mini_site'] = $page_mini_site;
  $variables['is_front_mini_site'] = $is_front_mini_site;
  $variables['is_front_mini_site'] = $is_front_mini_site;

}

function p1ps2019_preprocess_node(&$variables) {
  if (isset($site) && !empty($site)) {
    $site_id = $site->id();
    $variables['is_page_m'] = TRUE;
  }
  $node = $variables['node'];

  if ($variables['elements']['#view_mode'] == 'search_index') {
    switch ($node->getType()) {
      case "news" :
      case "news2018" :
        $variables['node_type_text'] = t("Actualité");
        break;
        case "page_personnelle" :
          $variables['node_type_text'] = t("Page Personnelle");
        break;
        case "event" :
          $variables['node_type_text'] = t("Évènement");
        break;
        case "viva" :
          $variables['node_type_text'] = t("Soutenance de thèse");
        break;
        case "offer" :
          $variables['node_type_text'] = t("Offre d'emploi");
        break;
        case "page" :
        case "second_level_pages" :
          $variables['node_type_text'] = t("Page");
        break;
      case "publication":
          $variables['node_type_text'] = t("Publication");
        break;
    }
  }
  if ($node->getType() == 'page_personnelle') {
    $uid = $node->getOwnerId();
    $user = User::load($uid);
    $umail = $user->getEmail();
    if (isset($umail) && !empty ($umail)) {
      $variables['mail'] = $umail;
    } else {
      $variables['mail'] = ComptexManager::getUserEmail($user->getUsername());
    }

  }
  if ($node->getType() == 'page_personnelle' && $node->hasField('field_skills')) {
    $skills = $node->get('field_skills')->getValue();
    if (!empty($skills)) {
      foreach ($skills as $key => $skill) {
        $tid = $skill['target_id'];
        $term = Term::load($tid);
        $arg = 'skills[' . $tid . ']';
        $url = Url::fromRoute('view.skills.page', [$arg => $tid]);
        $expertises[$key] =
          '<a href="'. $url->toString() .'"
          title="'. t('Link to @term_name page', ['@term_name' => $term->getName()]) . '"
          target="_blank">'
          . $term->getName() . '</a>';
      }
    }
    $variables['expertises'] = $expertises;
  }
  if ($node->getType() == 'page_personnelle' && $node->hasField('field_highlight_publications')) {
    $publications = $node->get('field_highlight_publications')->getValue();
    $col_length = 12;
    switch (count($publications)) {
      case 1:
        $col_length = "8";
        break;
      case 2:
      $col_length = "6";
        break;
      case 3:
        $col_length = "4";
        break;
    }
    $variables['col_length'] = $col_length;
  }

  if ($node->getType() == 'publication' && $node->hasField('field_publication_author')) {
    $authors = $node->get('field_publication_author')->getValue();
    if (!empty($authors)) {
      $publication_authors = [];
      foreach ($authors as $author) {
        $uid = $author['target_id'];
        $pp = \Drupal::entityTypeManager()
          ->getStorage('node')
          ->loadByProperties(['uid' => $uid]);
        $page_perso = reset($pp);
        if ($page_perso && $page_perso->getType() == 'page_personnelle') {
          $nom = $page_perso->get('field_name')->getValue();
          $prenom = $page_perso->get('field_firstname')->getValue();
          $page_perso_url = Url::fromRoute('entity.node.canonical',
            ['node' => $page_perso->id()])->toString();
          $publication_authors[] =
            '<a href="' . $page_perso_url . '" target="_blank"
            title="Page personnelle de ' . $prenom[0]['value'] . ' ' . $nom[0]['value'] . '">
            '. $prenom[0]['value'] . ' ' . $nom[0]['value'] . '</a>';
        }
      }
      $variables['publication_authors'] = $publication_authors;
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for menu.html.twig.
 */
function p1ps2019_preprocess_menu(&$variables) {
  $variables['lang'] = \Drupal::languageManager()->getCurrentLanguage()->getId();
  try {
    $variables['is_front'] = \Drupal::service('path.matcher')->isFrontPage();
  }
  catch (Exception $e) {
    $variables['is_front'] = FALSE;
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 * @param array $suggestions
 * @param array $variables
 */
function p1ps2019_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  // Block suggestions for custom block bundles.
  if (isset($variables['elements']['content']['#block_content'])) {
    array_splice($suggestions, 1, 0,
      'block__' . $variables['elements']['content']['#block_content']->bundle());
  }
}

function p1ps2019_preprocess_block(&$variables) {
  if (isset($variables["elements"]["#id"])) {
    $block_id = $variables["elements"]["#id"];

    $path = \Drupal::service('path.current')->getPath();
    $block = \Drupal\block\Entity\Block::load($block_id);
    $variables['lang'] = \Drupal::languageManager()->getCurrentLanguage()->getId();

    if ($block) {
      $variables["content"]["#attributes"]["region"] = $block->getRegion();
    }
    if ($block_id == 'p1ps2019_branding' || $block_id == 'p1ps2019_reseauxsociaux') {
      $negotiator = \Drupal::service('micro_site.negotiator');
      $site = $negotiator->getActiveSite();
      if ($site) {
        $variables['host_url'] = $site->getSiteScheme() . "://" . $site->getHostPublicUrl();
      }
      else $variables['host_url'] = '';
    }
  }
}

// add a template suggestion based on region name
function p1ps2019_theme_suggestions_menu_alter(array &$suggestions, array $variables) {
  if (isset($variables["attributes"]["region"])) {
    $suggestions[] = $variables["theme_hook_original"] . "__" . $variables["attributes"]["region"];
  }
}
function p1ps2019_preprocess_block__welcome_message_block(&$variables){
  $variables['isHome']=\Drupal::service('path.matcher')->isFrontPage();
}

/*
* template_preprocess_image
*
*/
function p1ps2019_preprocess_image(&$variables){
  if (!isset($variables['alt'])) {
    $variables['attributes']['alt'] = "";
  }
}

/**
 * Implements hook_theme_suggestions_container_alter().
 */
function p1ps2019_theme_suggestions_container_alter(array &$suggestions, array $variables) {
  $name='';
  $display_id = '';
  $pieces = [];

  if(isset($variables['element']['#name']) && $variables['element']['#name']) $name = $variables['element']['#name'];
  if(isset($variables['element']['#display_id']) && $variables['element']['#display_id']) $display_id = $variables['element']['#display_id'];

  if (isset($variables['element']['#type']) && !empty($variables['element']['#type'])) {
    $pieces[] = $variables['element']['#type'];
  }
  if ($name != '') $pieces[] = $name;
  if ($display_id != '') $pieces[] = $display_id;

  if (!empty($pieces)) $suggestions[] = 'container__' . implode('_', $pieces);
}

/**
 * Implements hook_theme_suggestions_alter().
 *
 * @param $suggestions
 * @param $variables
 * @param $hook
 */
function p1ps2019_theme_suggestions_alter(&$suggestions, $variables, $hook) {
  if (isset($variables['element']) && isset($variables['element']['#type']) && $variables['element']['#type'] == 'form') {
    $original_theme_hook = $variables['theme_hook_original'];
    array_unshift($suggestions, $original_theme_hook . '__' . str_replace('-', '_', $variables['element']['#id']));
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * @param $suggestions
 * @param $variables
 */
function p1ps2019_theme_suggestions_user_alter(&$suggestions,  $variables) {

  // Define the view mode.
  $mode = $variables['elements']['#view_mode'];

  // Create a theme hook suggestion which has the view mode name in it.
  $suggestions[] = 'user__' . $mode;

  // Get current user.
  $current_user = $variables['elements']['#user'];

  // Get current user's roles.
  $roles = $current_user->getRoles();

  // Add suggestion per role.
  foreach ($roles as $role) {
    $suggestions[] = 'user__' . $mode . '__' . $role;
  }
}

/*
* Implements template_preprocess_views_view()
* @param array $variables
*/
function p1ps2019_preprocess_views_view(&$variables) {
  $variables['is_listing_page'] = FALSE;
  $views = ['travailler_universite','listings'];
  if (in_array($variables['id'], $views)) {
    $variables['is_listing_page'] = TRUE;
    $variables['view_title'] = $variables['view']->getTitle();
  }
  $variables['is_master_view'] = FALSE;
  if ($variables['id'] == 'actualite') {
    $variables['is_master_view'] = TRUE;
    $variables['view_title'] = $variables['view']->getTitle();
  }
  $variables['archives'] = FALSE;
  if ($variables['id'] == 'listings') {
    $view_display = $variables['view']->getDisplay();
    if (in_array($view_display->display['display_title'],
      ['Évènements mini-sites', 'Évènements'])) {
      $variables['archives'] = TRUE;
    }
  }
  if (in_array($variables['id'], ['skills', 'annuaire_des_mini_sites'])) {
    $variables['view_title'] = $variables['view']->getTitle();
  }
  if ($variables['id'] == 'recent_contents') {
    $view_display = $variables['view']->getDisplay();
    $variables['view_display'] = $view_display->display['display_title'];
  }
  if($variables['more']) {
    $variables['more']['#options']['attributes']['class'] = array(
      'link-style', 'with-arrow'
    );
    $variables["more"]['#wrapper_attributes'] = ['class' => 'section-footer-wrapper'];
  }
}

function p1ps2019_preprocess_views_view_table(&$variables) {
  try {
    $variables['is_front'] = \Drupal::service('path.matcher')->isFrontPage();
  }
  catch (Exception $e) {
    $variables['is_front'] = FALSE;
  }
}

function p1ps2019_preprocess_paragraph(&$variables) {
  $paragraph = $variables['paragraph'];
  if ($paragraph->bundle() == 'contact') {
    $service = \Drupal::service('up1_global.centres');
    $variables['centre'] = $service->getACentre($paragraph->field_centre->value);

    if(!empty($paragraph->field_phone->value))
      array_unshift($variables['centre']['telephone'], $paragraph->field_phone->value);

    $email = [];
    if (!empty($variables['centre']['email'])) {
      $email[] = $variables['centre']['email'];
    }
    if(!empty($paragraph->field_email_address->value)) {
      array_unshift($email, $paragraph->field_email_address->value);
    }
    $variables['centre']['email'] = $email;

    $infos = [];
    if (!empty($variables['centre']['informations'])) {
      $infos[] = $variables['centre']['informations'];
    }
    $variables['centre']['informations'] = $infos;
  }
}

function p1ps2019_form_user_login_form_alter(&$form, $form_state, $form_id) {
  if (isset($form['name']) && $form['name']['#type'] == 'textfield') {
    $form['name']['#attributes']['placeholder'][] = $form['name']['#title'] . ' *';
    unset($form['name']['#title'], $form['name']['#description']);
  }
  if (isset($form['pass']) && $form['name']['#type'] == 'textfield') {
    $form['pass']['#attributes']['placeholder'][] = $form['pass']['#title'] . ' *';
    unset($form['pass']['#title'], $form['pass']['#description']);
  }
}


function p1ps2019_theme_suggestions_field_alter(&$suggestions, $variables) {
  $suggestions[] = 'field__' .
    $variables['element']['#field_name'] . '__' .
    $variables['element']['#view_mode'];
}
