{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @ingroup templates
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{%
  set classes = [
  node.bundle|clean_class,
  node.isPromoted() ? 'is-promoted',
  node.isSticky() ? 'is-sticky',
  not node.isPublished() ? 'is-unpublished',
  view_mode ? view_mode|clean_class,
  'clearfix'
]
%}
{{ attach_library('p1ps2019/match_height') }}
{% set other_affiliation = content.field_other_affiliation|render %}
{% set about_me = content.field_about_me|render %}
{% set research_directions = content.field_research_directions|render %}
{% set research_projects = content.field_research_projects|render %}
{% set research_themes = content.field_research_themes|render %}
{% set thesis_subject = content.field_thesis_subject|render %}
{% set phd_supervisor = content.field_phd_supervisor|render %}
{#{% set skills = content.field_skills|render %}#}
{% set hal_publications = hal_publications %}
{% if content.field_publications|render %}
  {% set publications = content.field_publications %}
{% endif %}
{% set resume_text = content.field_resume_text|render %}
{% set resume = content.field_resume|render %}
{% set resume_pdf = content.field_resume_pdf|render %}
{% set link_to_resume = content.field_link_to_resume|render %}
{% set email_address = content.field_other_email_address|render %}
{% set scientific_resp = content.field_scientific_resp|render %}
{% set thesis_directions = content.field_thesis_directions|render %}
{% set facebook_link = content.field_facebook_link|render %}
{% set twitter = content.field_twitter|render %}
{% set linkedin_link = content.field_linkedin_link|render %}
{% set viadeo_link = content.field_viadeo_link|render %}
{% set hypotheses = content.field_hypotheses_link|render %}
{% set epi = content.field_epi_link|render %}
{% set hal = content.field_hal_link|render %}
{% set academia = content.field_academia_link|render %}
{% set my_medias = content.field_my_medias|render %}
{% if expertises %}
  {% set skills = expertises %}
{% endif %}
{% set publis = content.field_highlight_publications|render %}
{% set sticky_pub = content.field_sticky_publications|render %}
{% set education = content.field_education|render %}


<article{{ attributes.addClass(classes) }}>
  <div class="box-style column-item">
    <div class="box-style same-height">
      {{ title_prefix }}
      <h2 class="title semi-infos-sep">
        <a href="{{ url }}" rel="bookmark">{{ label|raw }}</a>
      </h2>
      {{ title_suffix }}
      <div>{{ content.field_affiliation|raw }}</div>
      <div>{{ content.field_fonction|raw }}</div>
      {% if skills %}
        <p class="txt-bold">{{ content.field_skills['#title'] }}</p>
        <ul class="txt-second small infos-sep">
          {% for key, skill in skills if key|first != '#' %}
            <li class="btn btn-primary">
              {{ skill|raw }}
            </li>
          {% endfor %}
        </ul>
      {% endif %}
    </div>
  </div>
</article>
