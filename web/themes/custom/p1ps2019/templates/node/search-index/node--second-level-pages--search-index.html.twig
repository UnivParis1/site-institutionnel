{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @ingroup templates
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{% set node_type = node.bundle|clean_class %}
{%
  set classes = [
  node_type,
  view_mode ? view_mode|clean_class,
  'clearfix',
]
%}
<article{{ attributes.addClass(classes) }}>
  <div class="si-image si-picto-{{ node_type }}">
    <svg viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><title/><g data-name="paper, texture, background, cardboard, pattern, page, blank, white, letter, canvas" id="paper_texture_background_cardboard_pattern_page_blank_white_letter_canvas"><path d="M26,11a1,1,0,0,0-.28-.71l-8-8A1,1,0,0,0,17,2H9A3,3,0,0,0,6,5V27a3,3,0,0,0,3,3H23a3,3,0,0,0,3-3V11ZM18,5.41,22.59,10H19a1,1,0,0,1-1-1ZM23,28H9a1,1,0,0,1-1-1V5A1,1,0,0,1,9,4h7V9a3,3,0,0,0,3,3h5V27A1,1,0,0,1,23,28Z"/><path d="M11,16h4a1,1,0,0,0,0-2H11a1,1,0,0,0,0,2Z"/><path d="M21,18H11a1,1,0,0,0,0,2H21a1,1,0,0,0,0-2Z"/><path d="M21,22H11a1,1,0,0,0,0,2H21a1,1,0,0,0,0-2Z"/></g></svg>
  </div>
  <div class="si-info">
    <span class="si-type">{{ node_type_text }}</span>
    {{ title_prefix }}
    <h2{{ title_attributes.addClass('si-title') }}>
      <a href="{{ url }}" rel="bookmark" title="">{{ label.0 }}</a>
    </h2>
    {{ title_suffix }}
    {% if text_paragraphs is defined %}
      {% for paragraph in text_paragraphs %}
        {% if loop.index < 2 %}
          {{ paragraph }}
        {% endif %}
      {% endfor %}
    {% endif %}
    <div class="btn-wrapper">
      <a href="{{ url }}" class="btn btn-primary" title="readmore">{{ "Read more"|t }}</a>
    </div>
  </div>
</article>
