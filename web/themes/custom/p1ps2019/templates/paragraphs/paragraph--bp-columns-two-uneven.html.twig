{#
/**
 * @file
 * Bootstrap Paragraphs template for displaying a Two Columns Uneven layout.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{# The template default set classes. #}
{%
  set classes = [
  'paragraph',
  paragraph.bundle|clean_class,
  'cell',
  'small-12',
]
%}

{# Set width of the paragraph #}
{% if content.bp_width|render %}
  {% set layout_width = content.bp_width['#items'].getString() %}
  {% set layout_width_classes = [
    'paragraph--width--tiny' == layout_width ? 'large-6 large-offset-3',
    'paragraph--width--narrow' == layout_width ? 'large-8 large-offset-2',
    'paragraph--width--medium' == layout_width ? 'large-10 large-offset-1'
  ]
  %}
  {% set classes = classes|merge(layout_width_classes) %}
{% endif %}

{#Set Background of the paragraph #}
{% if content.bp_background|render %}
  {% set background_field = content.bp_background|render %}
  {% set layout_background = content.bp_background['#items'].getString() %}
  {% set layout_background_classes = [
    'paris1-bg-soft-grey' == layout_background ? 'paragraph--color paris1-bg-soft-grey',
    'paris1-bg-blue' == layout_background ? 'paragraph--color paris1-bg-blue',
  ]
  %}
{% endif %}

{# Renders Column Style field. #}
{# Sets class name from values in database. #}
{% if content.bp_column_style_2|render %}
  {% set column_style_2 = content.bp_column_style_2['#items'].getString() %}
  {% set column_style_2_classes = [
    'paragraph--style--75-25' == column_style_2 ? 'col-75-25',
    'paragraph--style--66-33' == column_style_2 ? 'col-66-33',
    'paragraph--style--25-75' == column_style_2 ? 'col-25-75',
    'paragraph--style--33-66' == column_style_2 ? 'col-33-66',
  ]
  %}
  {% set classes = classes|merge(column_style_2_classes) %}

  {% if column_style_2 == 'paragraph--style--75-25' %}
    {% set first_col = 'small-12 medium-9 large-9' %}
    {% set sec_col = 'small-12 medium-3 large-3 large-offset-1' %}
  {% elseif column_style_2 == 'paragraph--style--66-33' %}
    {% set first_col = 'small-12 medium-8 large-8' %}
    {% set sec_col = 'small-12 medium-4 large-4 large-offset-1' %}
  {% elseif column_style_2 == 'paragraph--style--25-75' %}
    {% set first_col = 'small-12 medium-3 large-3' %}
    {% set sec_col = 'small-12 medium-9 large-9 large-offset-1' %}
  {% elseif column_style_2 == 'paragraph--style--33-66' %}
    {% set first_col = 'small-12 medium-4 large-4' %}
    {% set sec_col = 'small-12 medium-8 large-8 large-offset-1' %}
  {% endif %}
{% endif %}

{% if background_field %}
<div class="{{ layout_background_classes|join(' ') }}">
  {% endif %}
  <div{{ attributes.addClass(classes) }}>
    <div class="grid-container">
      <div class="grid-x grid-margin-x">
        {% if content.field_title|render %}
          <h2>{{ content.field_title.0 }}</h2>
        {% endif %}
        <div class="cell small-12 column-uneven-wrapper">
          {% for key, column in content.bp_column_content_2 if key|first != '#' %}
            <div class="{% if key is even %}{{ first_col }}{% else %}{{ sec_col }}{% endif %}">
              {{ column }}
            </div>
          {% endfor %}
        </div>
      </div>
    </div>
  </div>
  {% if background_field %}
</div>
{% endif %}
