{#
/**
 * @file
 * Default theme implementation to display a paragraph in Bootstrap Paragraphs.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
 {{ attach_library('bootstrap_paragraphs/bootstrap-paragraphs') }}
#}


{% if content.bp_width|render %}
  {% set layout_width = content.bp_width['#items'].getString() %}
  {% set layout_width_classes = [
    'paragraph--width--tiny' == layout_width ? 'paragraph--width--tiny',
    'paragraph--width--narrow' == layout_width ? 'paragraph--width--narrow',
    'paragraph--width--medium' == layout_width ? 'paragraph--width--medium',
    'paragraph--width--wide' == layout_width ? 'paragraph--width--wide',
    'paragraph--width--full' == layout_width ? 'paragraph--width--full',
  ]
  %}
{% endif %}

{# {% set nbCols = content.field_column_number.0 %} #}

{%
  set classes = [
  'paragraph', 'reset-mask-mobile padding-mobile', 'padding-top-bottom-mobile',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
]
%}

{# Merges Width field with classes.
{% set width_field = content.bp_width|render %}
{% if width_field %}
  {% set classes = classes|merge(layout_width_classes) %}
{% endif %}
#}
{# Test if user chose an icon #}
{% set icon = content.field_cta_icon['#items'].getString() %}
{% if icon is not empty %}
  {% set cta_classes = 'with-icon fa fa-' ~ icon %}
{% endif %}

{% block paragraph %}
  {# Prints div with classes, and content without Width and Background. #}
  <div{{ attributes.addClass(classes) }}>
    <div class="paragraph__column no-hover relative-wrapper">
      <div class="hitlist-overlay">
        <div class="grid-container">
          <div class="grid-x grid-margin-x grid-margin-y">
            <div class="cell small-12 no-margin-top-bottom">
              {% if content.field_title|render %}
                <h2 class="text-center margin-vertical-3">{{ content.field_title.0 }}</h2>
              {% endif %}
            </div>
            {% for key, item in  content.field_ranking|filter((value, key) => key|first != '#') %}
              <div class="cell large-3 medium-6 small-12 margin-y-mobile">
                {{ item }}
              </div>
            {% endfor %}
            {% if content.bp_link|render is not empty %}
		<div class="cell large-3 medium-6 small-12 margin-y-mobile btn-wrapper">
              <a class="{{ cta_classes }}" href="{{ content.bp_link.0['#url'] }}" title="{{ content.bp_link.0['#title'] }}">
                {{ content.bp_link.0['#title'] }}
              </a>
            </div>
{% endif %}
          </div>
        </div>
      </div>
    </div>
  </div>
{% endblock paragraph %}
