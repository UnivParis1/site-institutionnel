{#
/**
 * @file
 * Default theme implementation to display a paragraph in Bootstrap Paragraphs.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{# The template default set classes. #}
{%
  set classes = [
  'paragraph', 'paragraph--type--' ~ paragraph.bundle|clean_class,
]
%}
{# Card Width #}
{% if content.field_card_width|render %}
  {% set layout_width = [ content.field_card_width['#items'].getString() ] %}
  {% set classes = classes|merge(layout_width) %}
{% endif %}

{# Background field. #}
{% if content.bp_background|render %}
  {% set background_field = content.bp_background|render %}

  {% set layout_background = content.bp_background['#items'].getString() %}
  {% set layout_background_classes = [
    'paris1-bg-soft-grey' == layout_background ? 'paragraph--color paris1-bg-soft-grey',
    'paris1-bg-blue' == layout_background ? 'paragraph--color paris1-bg-blue',
    'bg-white' == layout_background ? 'paragraph--color bg-white',
  ]
  %}
{% endif %}

{% block paragraph %}
  <div {{ attributes.addClass(classes) }}>
    <div class="grid-container">
      <div class="grid-x grid-margin-x {{ layout_background_classes|join('') }}">
        <div class="cell medium-4 small-12 col-media">
          {{ content.field_media }}
        </div>
        <div class="cell medium-8 small-12 col-content">
          <h2 class="title h4-style">
            <a href="{{ content.bp_link.0['#url'] }}" title="{{ content.bp_link.0['#title'] }}">{{ content.field_title.0 }}</a>
          </h2>
          <div><p>{{ content.field_card_desc.0 }}</p></div>
          <div>
            <a class="btn btn-primary" href="{{ content.bp_link.0['#url'] }}" title="{{ content.field_title.0 }}">
              {{ content.bp_link.0['#title'] }}
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>
{% endblock %}
