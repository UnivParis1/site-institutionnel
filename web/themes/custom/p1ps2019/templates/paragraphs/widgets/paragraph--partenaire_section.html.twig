{#
/**
 * @file
 * Default theme implementation to display a paragraph in Bootstrap Paragraphs.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{{ attach_library('bootstrap_paragraphs/bootstrap-paragraphs') }}
{% if paragraph.bundle == 'bp_columns' %}
  {{ attach_library('bootstrap_paragraphs/bp-columns') }}
{% endif %}

{# Renders Width field. #}
{# Sets class name from values in database. #}

{% if content.field_icon_width|render %}
  {% set layout_width = content.field_icon_width['#items'].getString() %}
  {% set layout_width_classes = [
    'icon--width--2' == layout_width ? 'icon--width--2',
    'icon--width--3' == layout_width ? 'icon--width--3',
    'icon--width--4' == layout_width ? 'icon--width--4',
  ]
  %}
{% endif %}


{%
  set classes = [
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
]
%}

{# Merges Width field with classes. #}
{% set width_field = content.icon_width|render %}
{% if width_field %}
  {% set classes = classes|merge(layout_width_classes) %}
{% endif %}


{% set nbCols %}
  {{ content.field_column_number.0 }}
{% endset %}



{% if layout_width == 'icon--width--2' %}
    {% set element_class = 'cell small-6 medium-2 large-2' %}
  {% else %}
    {% set element_class = 'cell small-12 medium-4 large-' ~ nbCols|trim %}
{% endif %}

{% if layout_width == 'icon--width--3' %}
    {% set element_class = 'cell small-8 medium-3 large-3' %}
{% endif %}

{% if layout_width == 'icon--width--4' %}
    {% set element_class = 'cell small-10 medium-4 large-4' %}
{% endif %}

{# Prints div with classes, and content without Width and Background. #}
<div{{ attributes.addClass(classes) }}>
  {% set title = '' %}
  {% set title %}
    {{ content.field_title.0 }}
  {% endset %}

    <div class="{{ parag_col_classes }}">

    {% if title|striptags|trim %}
      <div class="grid-container">
          <div class="grid-x grid-margin-x">
              <div class="cell small-12">
                <h2 class="titre">{{ content.field_title.0 }}</h2>
              </div>
          </div>
      </div>
    {% endif %}

    <div class="grid-container {{ layout_width_classes_partenaire }}">
      <div class="grid-x grid-margin-x grid-margin-y partenaire-layout">
          {% for key, item in  content.field_partenaire|filter((value, key) => key|first != '#') %}
            <div class="{{ element_class }}">{{ item }}</div>
          {% endfor %}

      </div>
    </div><!-- grid container -->
  </div> <!-- col parags -->
</div>
