{#
/**
 * @file
 * Default theme implementation to display a paragraph in Bootstrap Paragraphs.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{# The template default set classes. #}
{%
  set classes = [
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  paragraph.bundle|clean_class,
  'cell',
  'small-12',
]
%}

{# Set width of the paragraph #}
{% if content.bp_width|render %}
  {% set layout_width = content.bp_width['#items'].getString() %}
  {% set layout_width_classes = [
    'paragraph--width--tiny' == layout_width ? 'large-6 large-offset-3',
    'paragraph--width--narrow' == layout_width ? 'large-8 large-offset-2',
    'paragraph--width--medium' == layout_width ? 'large-10 large-offset-1'
  ]
  %}
  {% set classes = classes|merge(layout_width_classes) %}
{% endif %}

{# Set link icon if exists #}
{% set icon = content.field_cta_icon['#items'].getString() %}
{% if icon is not empty %}
  {% set cta_classes = 'with-icon fa fa-' ~ icon %}
{% endif %}

{#Set Background of the paragraph #}
{% if content.bp_background|render %}
  {% set background_field = content.bp_background|render %}
  {% set layout_background = content.bp_background['#items'].getString() %}
  {% set layout_background_classes = [
    'paris1-bg-soft-grey' == layout_background ? 'paragraph--color paris1-bg-soft-grey',
    'paris1-bg-blue' == layout_background ? 'paragraph--color paris1-bg-blue',
  ]
  %}
  {% set btn_style = 'paris1-bg-soft-grey' == layout_background ? 'inline' : 'outline' %}
{% endif %}

{% set link_attributes = content.bp_link.0['#options'].attributes %}
{% if link_attributes.target is not empty %}
  {% set link_target = link_attributes.target %}
{% else %}
  {% set link_target = "_self" %}
{% endif %}
{% if background_field %}
<div class="{{ layout_background_classes|join(' ') }}">
  {% endif %}
  <div{{ attributes.addClass(classes) }}>
    <div class="grid-container">
      <div class="grid-x grid-margin-x">
        <div class="cell small-12">
          {% if content.field_title|render %}
            <h2 class="titre">{{ content.field_title.0 }}</h2>
          {% endif %}
          <div>{{ content.bp_text }}</div>
          {% if content.bp_link|render %}
            <span class="{{ content.field_cta_icon.0 }}">{{ icon }}</span>
            <a class=" btn {{ btn_style }} with-icon" href="{{ content.bp_link.0['#url'] }}"
               title="{{ content.bp_link.0['#title'] }}" target="{{ link_target }}" >
              {{ content.bp_link.0['#title'] }}
            </a>
          {% endif %}
        </div>
      </div>
    </div>
  </div>
  {% if background_field %}
</div>
{% endif %}
